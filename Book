create table book(book_id number(20),
book_name varchar2(50) not null,
author_name varchar2(50) not null,
price number(20),
publisher varchar2(100) not null,
version number(3)
,genre varchar2(20) not null,
active number(10),
constraint book_id_pk primary key (book_id),
constraint price_ck check (price >=0),
constraint book_name_uq unique(book_name,author_name,version));

insert into book (book_id,book_name, author_name,price,publisher,version,genre,active)
values (1,'inspire','Mr.X',500,'abc',1,'thriller',1)
insert into book (book_id,book_name, author_name,price,publisher,version,genre,active)
values (2,'inspire','Mr.X',600,'abc',2,'thriller',1)
insert into book (book_id,book_name, author_name,price,publisher,version,genre,active)
values (3,'inspire','Mr.X',300,'abc',3,'thriller',0)
select * from book;
commit;

create table want(order_id number(10) not null,
user_id number(10) not null,
book_id number(10) not null,
ordered_date timestamp not null,
estimated_date timestamp not null,
quantity number(5) not null,
status varchar2(15) not null,
amount number(10),
constraint order_id_pk primary key (order_id),
constraint user_id_uq unique (user_id),
constraint book_id_fk foreign key (book_id) references book(book_id),
constraint amount_ck check(amount>0),
constraint quantity_ck check(quantity>0)
);
update want set amount = 30 where user_id = 104;
select * from want;
insert into want (order_id,user_id,book_id,ordered_date,estimated_date,quantity,status,amount) 
values(1,101,1,sysdate,to_date('30-12-2019','dd-MM-yyyy'),2,'shipping',100);
insert into want (order_id,user_id,book_id,ordered_date,estimated_date,quantity,status,amount) 
values(2,105,2,sysdate,to_date('30-12-2019','dd-MM-yyyy'),3,'shipping',10);
insert into want (order_id,user_id,book_id,ordered_date,estimated_date,quantity,status,amount) 
values(3,104,3,sysdate,to_date('01-01-2020','dd-MM-yyyy'),1,'packing',30);
update want set status='delivered' where book_id=3;
select * from want;
select * from want order by ordered_date asc;
--drop table want;


--select * 
--from book b
--inner join want w
--on b.book_id= w.book_id;



create table bookstock(book_id number(10),quantity number(5),
constraint book_id_uq unique(book_id));

insert into bookstock values (1,50);
insert into bookstock values (2,20);
insert into bookstock values (3,30);
select * from bookstock;


create table order_items(order_no number(20),
order_id number(20)not null,
book_id number(20),
status varchar2(10)not null,
quantity number(10)not null,
constraint order_no_uq unique(order_no),
constraint book_id_uqi1 unique(book_id));
--drop table order_items;
-- OWNER
-- SYS.ALL_CONS_COLUMNS
--desc user_constraints;
--select  CONSTRAINT_NAME, CONSTRAINT_TYPE, TABLE_NAME from user_constraints where table_name='ORDER_ITEMS';

insert into order_items values(1,101,1,'ordered',2);
insert into order_items values(2,102,2,'ordered',5);
select * from order_items;

select b.book_name,
(select sum(o.quantity) from order_items o where o.book_id=b.book_id) as val from book b;
select * from bookstock


update bookstock b set b.quantity= b.quantity-(select o.quantity from order_items o where b.book_id=o.book_id);

update want w set amount =(select price *(select quantity from order_items o where o.book_id = w.book_id )
 from book b where b.book_id = w.book_id )
 --*(select quantity from order_items o where o.book_id = w.book_id );

select book_name, (select sum (quantity) from order_items o where book_id = b.book_id) from book b;

select book_name,(select quantity from bookstock where boo

select * from want

select o.quantity from order_items o

select b.price from book b

select * from want;

select * from order_items;

select * from book;
